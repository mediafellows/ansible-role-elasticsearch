---
# Elasticsearch Ansible Tasks

# Information outputs
- name: Install following ElasticSearch version
  debug:
    var: elasticsearch_version

- name: Plugin vars info output
  debug:
    var: elasticsearch_plugins
- debug:
    var: elasticsearch_aws_s3
- debug:
    var: elasticsearch_aws_discovery

- name: Heap size info
  debug:
    var: elasticsearch_heap_size

# Preparations and dependency installs
- name: Configuring timezone
  shell: echo {{ elasticsearch_timezone }} > /etc/timezone; dpkg-reconfigure --frontend noninteractive tzdata
  when: elasticsearch_timezone is defined

- name: Add specified repos and update apt index
  apt_repository:
    repo: '{{ item }}'
    state: present
    update_cache: yes
  with_items: '{{ elasticsearch_apt_repos }}'

- name: Install Java package
  apt:
    pkg: '{{ elasticsearch_apt_java_package }}'
    state: present
  when: elasticsearch_install_java

- name: Install other packages specified as dependencies
  apt:
    pkg: '{{ item }}'
    state: present
  with_items: '{{ elasticsearch_apt_dependencies }}'

- name: Configuring user and group
  group:
    name: '{{ elasticsearch_group }}'
- user:
    name: '{{ elasticsearch_user }}'
    group: '{{ elasticsearch_group }}'
    createhome: no

- name: Check whether we have aleady installed the same version
  shell: if [ -e /usr/share/elasticsearch/lib/elasticsearch-{{ elasticsearch_version }}.jar ]; then echo yes; else echo no; fi;
  register: version_exists
  check_mode: no

- set_fact:
    elasticsearch_download_url: 'https://download.elasticsearch.org/elasticsearch/elasticsearch'
  when:
    - elasticsearch_download_url is undefined
    - elasticsearch_version | version_compare('5.0', '<')

- set_fact:
    elasticsearch_download_url: 'https://artifacts.elastic.co/downloads/elasticsearch'
  when:
    - elasticsearch_download_url is undefined
    - elasticsearch_version | version_compare('5.0', '>=')

- name: Download Elasticsearch deb if needed
  get_url:
    url: '{{ elasticsearch_download_url }}/elasticsearch-{{ elasticsearch_version }}.deb'
    dest: /tmp/elasticsearch-{{ elasticsearch_version }}.deb
    mode: 0440
  when: version_exists.stdout == 'no'

- name: Uninstalling previous version if applicable
  shell: dpkg --remove elasticsearch
  when: version_exists.stdout == 'no'

- file:
    path: /usr/share/elasticsearch
    state: absent
  when: version_exists.stdout == 'no'

- name: Install Elasticsearch deb
  shell: dpkg -i -E --force-confnew /tmp/elasticsearch-{{ elasticsearch_version }}.deb
  when: version_exists.stdout == 'no'

- name: Ensure correct permissions
  file:
    path: /usr/share/elasticsearch
    state: directory
    owner: '{{ elasticsearch_user }}'
    group: '{{ elasticsearch_group }}'
    recurse: yes

- name: Configuring directories
  file: path={{ elasticsearch_log_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_log_dir is defined
- file: path={{ elasticsearch_data_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_data_dir is defined
- file: path={{ elasticsearch_work_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_work_dir is defined

- name: Configuring open file limits
  lineinfile:
    dest: /etc/security/limits.conf
    regexp: '^{{ elasticsearch_user }}     -    nofile    {{ elasticsearch_max_open_files }}'
    insertafter: EOF
    line: '{{ elasticsearch_user }}     -    nofile    {{ elasticsearch_max_open_files }}'
  when: elasticsearch_max_open_files is defined
  notify: Restart Elasticsearch

- lineinfile:
    dest: /etc/security/limits.conf
    regexp: '^{{ elasticsearch_user }}     -    memlock   {{ elasticsearch_max_locked_memory }}'
    insertafter: EOF
    line: '{{ elasticsearch_user }}     -    memlock   {{ elasticsearch_max_locked_memory }}'
  when: elasticsearch_max_locked_memory is defined
  notify: Restart Elasticsearch

- lineinfile:
    dest: /etc/pam.d/su
    regexp: '^session    required   pam_limits.so'
    insertafter: EOF
    line: 'session    required   pam_limits.so'
  notify: Restart Elasticsearch

- lineinfile:
    dest: /etc/pam.d/common-session
    regexp: '^session    required   pam_limits.so'
    insertafter: EOF
    line: 'session    required   pam_limits.so'
  notify: Restart Elasticsearch

- lineinfile:
    dest: /etc/pam.d/common-session-noninteractive
    regexp: '^session    required   pam_limits.so'
    insertafter: EOF
    line: 'session    required   pam_limits.so'
  notify: Restart Elasticsearch

- lineinfile:
    dest: /etc/pam.d/sudo
    regexp: '^session    required   pam_limits.so'
    insertafter: EOF
    line: 'session    required   pam_limits.so'
  notify: Restart Elasticsearch

# Install custom JARs
- include_tasks: custom-jars.yml
  when: elasticsearch_custom_jars is defined

# Configure Elasticsearch Node, depending on version
- include_tasks: configure_2x.yml
  when: elasticsearch_version | version_compare('5.0', '<')

- include_tasks: configure_5x.yml
  when:
    - elasticsearch_version | version_compare('5.0', '>=')
    - elasticsearch_version | version_compare('6.0', '<')

- include_tasks: configure_6x.yml
  when: elasticsearch_version | version_compare('6.0', '>=')

# Install Plugins with ES 2.0 - 2.4 (ES version 5.0 follows 2.4)
- include_tasks: plugins_2x.yml
  when:
    - elasticsearch_version | version_compare('2.0', '>=')
    - elasticsearch_version | version_compare('5.0', '<')

# Install Plugins with ES 5.x
- include_tasks: plugins_5x.yml
  when:
    - elasticsearch_version | version_compare('5.0', '>=')
    - elasticsearch_version | version_compare('6.0', '<')

# Install Plugins with ES 6.x
- include_tasks: plugins_6x.yml
  when:
    - elasticsearch_version | version_compare('6.0', '>=')

# Register Elasticsearch service to start on boot
- name: Ensure Elasticsearch is started on boot
  service:
    name: elasticsearch
    enabled: '{{ elasticsearch_service_startonboot }}'
    state: '{{ elasticsearch_service_state }}'

# Copy ES maintainance scripts to machine
- name: Copy reroute script to machine
  copy:
    src: unassigned-reroute.sh
    dest: '{{ elasticsearch_scripts_dir }}/unassigned-reroute.sh'
    mode: 'u=rwx'
  when: elasticsearch_scripts_dir is defined
