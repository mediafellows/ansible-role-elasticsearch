# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
#cluster.name: my-application
{% if elasticsearch_cluster_name is defined %}
cluster.name: {{ elasticsearch_cluster_name }}
{% endif %}

# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
#node.name: node-1
{% if elasticsearch_node_name is defined %}
node.name: {{ elasticsearch_node_name }}
{% endif %}

# Every node can be configured to allow or deny being eligible as the master,
# to allow or deny to store the data, or be an ingest node or not.
# See docs here https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html
#
# Allow this node to be eligible as a master node (enabled by default):
#
# node.master: true
{% if elasticsearch_node_master is defined %}
node.master: {{ elasticsearch_node_master }}
{% endif %}

# Allow this node to store data (enabled by default):
#
# node.data: true
{% if elasticsearch_node_data is defined %}
node.data: {{ elasticsearch_node_data }}
{% endif %}

# Allow this node to to be used for data ingest (enabled by default):
#
# node.ingest: true
{% if elasticsearch_node_ingest is defined %}
node.ingest: {{ elasticsearch_node_ingest }}
{% endif %}

# Disallow cross cluster search when node type is ingest or coordination only node
{% if (elasticsearch_node_master is defined) or (elasticsearch_node_data is defined) %}
{% if (elasticsearch_node_master == false) and (elasticsearch_node_data == false) %}
search.remote.connect: false
{% endig %}

# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
#path.data: /path/to/data
{% if elasticsearch_data_dir is defined %}
path.data: {{ elasticsearch_data_dir }}
{% endif %}

# Path to log files:
#
#path.logs: /path/to/logs
{% if elasticsearch_log_dir is defined %}
path.logs: {{ elasticsearch_log_dir }}
{% endif %}


# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
#network.host: 192.168.0.1
{% if elasticsearch_network_bind_host is defined %}
network.host: {{ elasticsearch_network_bind_host }}
{% endif %}

# Check allowed values here:
# https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html#network-interface-values
#
# Set a custom port for HTTP:
#
#http.port: 9200
{% if elasticsearch_network_http_port is defined %}
http.port: {{ elasticsearch_network_http_port }}
{% endif %}

# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
#discovery.zen.ping.unicast.hosts: ["host1", "host2"]
{% if elasticsearch_discovery_zen_ping_unicast_hosts is defined %}
discovery.zen.ping.unicast.hosts: {{ elasticsearch_discovery_zen_ping_unicast_hosts }}
{% endif %}

# Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):
#
#discovery.zen.minimum_master_nodes: 3
{% if elasticsearch_discovery_zen_minimum_master_nodes is defined %}
discovery.zen.minimum_master_nodes: {{ elasticsearch_discovery_zen_minimum_master_nodes }}
{% endif %}

# For more information, consult the zen discovery module documentation.

# To use other discovery provider then zen use host_provider setting
#
# discovery.zen.hosts_provider: ec2
{% if elasticsearch_aws_discovery | bool %}
discovery.zen.hosts_provider: ec2

{% if elasticsearch_aws_discovery_groups is defined  %}
discovery.ec2.groups: {{ elasticsearch_aws_discovery_groups }}
{% endif %}
{% endif %}

# ------ Optional Cloud plugin settings, used for discovery and snapshot storage plugins -------
#
# cloud.aws.region: us-east-1
{% if elasticsearch_plugin_aws_region is defined %}
cloud.aws.region: {{ elasticsearch_plugin_aws_region}}
{% endif %}

# cloud.aws.access_key: abc123 # set access key when machine has no IAM role
# cloud.aws.secret_key: asdasdasdasdasdasdas # set secret key when machine has no IAM role
{% if (elasticsearch_plugin_aws_access_key is defined) and (elasticsearch_plugin_aws_secret_key is defined) %}
cloud.aws.access_key: '{{ elasticsearch_plugin_aws_access_key }}'
cloud.aws.secret_key: '{{ elasticsearch_plugin_aws_secret_key }}'
{% endif %}

# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
{% if elasticsearch_gateway_recover_after_nodes is defined %}
gateway.recover_after_nodes: {{ elasticsearch_gateway_recover_after_nodes }}
{% endif %}

# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true
{% if elasticsearch_misc_disable_delete_all_indices is defined %}
action.destructive_requires_name: {{ elasticsearch_misc_disable_delete_all_indices }}
{% endif %}

# Disable auto creation of indices by first request
#
# action.destructive_requires_name: false
{% if elasticsearch_misc_auto_create_index is defined %}
action.auto_create_index: {{ elasticsearch_misc_auto_create_index }}
{% endif %}
